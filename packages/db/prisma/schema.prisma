generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String      @id @default(uuid())
  email        String      @unique
  passwordHash String
  fullName     String?
  createdAt    DateTime    @default(now())
  roles        UserRole[]
  orders       Order[]     // ⬅️ đổi từ bookings -> orders
}

model Role {
  id    Int        @id @default(autoincrement())
  name  String     @unique
  users UserRole[]
}

model UserRole {
  userId String
  roleId Int
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  role   Role @relation(fields: [roleId], references: [id], onDelete: Cascade)
  @@id([userId, roleId])
}

model Event {
  id        String   @id @default(uuid())
  name      String
  city      String?
  cover     String?
  startsAt  DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  shows     Show[]

  @@index([deletedAt])
  @@index([startsAt])
}

model Show {
  id         String      @id @default(uuid())
  eventId    String
  startsAt   DateTime
  venue      String?
  seatMapId  String?
  status     ShowStatus  @default(scheduled)
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  deletedAt  DateTime?
  event      Event       @relation(fields: [eventId], references: [id], onDelete: Cascade)
  tickets    Ticket[]
  orders     Order[]     // ⬅️ đổi từ bookings -> orders

  @@index([eventId])
  @@index([startsAt])
  @@index([deletedAt])
}

enum ShowStatus {
  scheduled
  cancelled
}

model Order {
  id        String      @id @default(uuid())
  userId    String
  showId    String
  amount    Int
  status    OrderStatus @default(pending) // ⬅️ cần enum có pending
  createdAt DateTime    @default(now())
  tickets   Ticket[]

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  show Show @relation(fields: [showId], references: [id], onDelete: Cascade)
}

enum OrderStatus {
  pending   // ⬅️ thêm
  paid
  failed
  cancelled
}

model Ticket {
  id          String   @id @default(uuid())
  showId      String
  seatId      String
  orderId     String?
  checkedInAt DateTime?
  show        Show     @relation(fields: [showId], references: [id], onDelete: Cascade)
  order       Order?   @relation(fields: [orderId], references: [id])

  @@unique([showId, seatId]) // chống double-book
}
